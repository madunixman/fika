#! /usr/bin/env bash
# Usage: fika project:servlet <project-name> 
# Summary: creates a new web project <project-name> in the current directory
# Help: This command is useful to create usual maven boilerplate for dead-simple projects


if [ $# -ne 1 ]; then
	echo "Bad param numbers: see manual"
	exit;
else
	PROJECTNAME=$1
	lowProject=$(echo "$PROJECTNAME" | tr '[:upper:]' '[:lower:]')
	if [ "$MVN_GROUPID" = "" ]; then
		echo -ne "Group Id: "; read mvn_groupid
	else
		mvn_groupid=${MVN_GROUPID}
	fi 
	
	echo -ne "Description: "; read mvn_description
	mkdir -p ${PROJECTNAME}/src/main/java
	mkdir -p ${PROJECTNAME}/src/main/resources
	mkdir -p ${PROJECTNAME}/src/main/webapp
	mkdir -p ${PROJECTNAME}/src/main/webapp/WEB-INF
	mkdir -p ${PROJECTNAME}/src/main/webapp/WEB-INF/classes
	mkdir -p ${PROJECTNAME}/src/test/java
	mkdir -p ${PROJECTNAME}/src/test/resources
	mkdir -p ${PROJECTNAME}/script

cat<<__EOD__>${PROJECTNAME}/src/main/webapp/WEB-INF/classes/logging.properties
org.apache.catalina.core.ContainerBase.[Catalina].level = INFO
org.apache.catalina.core.ContainerBase.[Catalina].handlers = java.util.logging.ConsoleHandler
__EOD__

cat<<__EOD__>${PROJECTNAME}/script/test.sh
#! /bin/bash -x

ENDPOINT=http://127.0.0.1:8080/${PROJECTNAME}/json/item/post

curl -H "Content-Type: application/json" \\
        --data  '{"a":"aaa-string", "b":"bbb-string"}' \\
        \${ENDPOINT}
__EOD__

chmod 755 ${PROJECTNAME}/script/test.sh

cat<<__EOD__>${PROJECTNAME}/src/main/webapp/index.html
<html>
<head><title>${PROJECTNAME}</title></head>
<body><h1>${PROJECTNAME}</h1>

</body>
</html>
__EOD__
cat<<__EOD__>${PROJECTNAME}/src/main/java/JSONService.java
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;
import java.util.Hashtable;

@Path("/json/item")
public class JSONService {

        @GET
        @Path("/get")
        @Produces("application/json")
        public Hashtable<String, String> getItemInJSON() {
		       Hashtable<String, String>item = new Hashtable<String, String>();
        	       item.put("name", "my-name");
        	       item.put("surname", "my-surname");
                return item;

        }

        @POST
        @Path("/post")
        @Consumes("application/json")
        public Response createItemInJSON(Hashtable<String, String> item) {

                String result = "Item created : " + item;
                return Response.status(201).entity(result).build();

        }

}

__EOD__
 	cat<<__EOD__>${PROJECTNAME}/src/main/webapp/WEB-INF/web.xml
<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>${PROJECTNAME}</display-name>
	<context-param>
		<param-name>resteasy.resources</param-name>
		<param-value>JSONService</param-value><!-- WILL HAVE TO PUT THE PACKAGE OF THIS CLASS HERE !!! -->
	</context-param>

	<listener>
		<listener-class>
			org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap</listener-class>
	</listener>
	<servlet>
		<servlet-name>resteasy-servlet</servlet-name>
		<servlet-class>
			org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>resteasy-servlet</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>
</web-app>
__EOD__
 	cat<<__EOD__>${PROJECTNAME}/pom.xml
<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>${mvn_groupid}.${lowProject}</groupId>
  <artifactId>${PROJECTNAME}</artifactId>
  <packaging>war</packaging>
  <version>0.0.1</version>
  <description>${mvn_description}</description>
  <!-- homepage for the project  ${PROJECTNAME}-->
  <!-- EG: <url>http://code.lulli.net/projects/${PROJECTNAME}</url>-->
<!-- for distribution of artifact into the repo -->
<!-- ****************************************** -->
<build>
 <extensions>
    <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>2.8</version>
    </extension>
 </extensions>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>11</source>
          <target>11</target>
        </configuration>
      </plugin>
    </plugins>
<!--  For ReastEasy build -->

</build>
<!-- 
 Kindly include the following params into your settings.xml
 if you want to upload to your own repo 
-->
<distributionManagement>
    <repository>
      <id>\${repository.id}</id>
      <name>\${repository.name}</name>
      <url>\${repository.url}</url>
    </repository>
    <site>
      <id>\${repository.id}</id>
      <name>\${repository.name}</name>
      <url>\${repository.site.url}</url>
    </site>
</distributionManagement>
<!-- ****************************************** -->

<dependencies>
  <dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>1.2.17</version>
  </dependency>

<dependency>
	<groupId>org.jboss.resteasy</groupId>
	<artifactId>resteasy-jaxrs</artifactId>
	<version>2.2.1.GA</version>
</dependency>
<dependency>
           <groupId>org.jboss.resteasy</groupId>
           <artifactId>resteasy-jackson-provider</artifactId>
           <version>2.2.1.GA</version>
</dependency>


</dependencies>


</project>
__EOD__


fi
