#! /usr/bin/env bash
# Usage: fika project:ant <project-name> 
# Summary: creates a new Ant project <project-name> in the current directory
# Help: This command is useful to create usual ant structure for simple batch projects


if [ $# -ne 1 ]; then
	echo "Bad param numbers: see manual"
	exit;
else
	PROJECTNAME=$1
	lowProject=$(echo "$PROJECTNAME" | tr '[:upper:]' '[:lower:]')
	if [ "$MVN_GROUPID" = "" ]; then
		echo -ne "Group Id: "; read mvn_groupid
	else
		mvn_groupid=${MVN_GROUPID}
	fi 
	
	echo -ne "Description: "; read mvn_description
        mkdir -p ${PROJECTNAME}/lib
        mkdir -p ${PROJECTNAME}/src/main/java
        mkdir -p ${PROJECTNAME}/src/main/resources
        mkdir -p ${PROJECTNAME}/src/main/webapp
        mkdir -p ${PROJECTNAME}/src/test/java
        mkdir -p ${PROJECTNAME}/src/test/resources
 	cat<<__EOD__>${PROJECTNAME}/build.xml
<project name="${PROJECTNAME}" default="dist" basedir=".">
  <property name="project"  value="${lowProject}"/>
  <property name="version"  value="1.0.0"/>
    <description>
        Build file for project \${project}
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src/main/java"/>
  <property name="build" location="build"/>
  <property name="dist"  location="target"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="\${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from \${src} into \${build} -->
	<javac srcdir="\${src}" destdir="\${build}">
    		<classpath>
    			<fileset dir="lib">
    		        	<include name="**/*.jar"/>
    			</fileset>
    		</classpath>
	</javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <!--<mkdir dir="\${dist}/lib"/>-->
    <mkdir dir="\${dist}"/>

    <!--<jar jarfile="\${dist}/lib/metadao.jar" basedir="\${build}"/>-->
    <jar jarfile="\${dist}/\${project}-\${version}.jar" basedir="\${build}"/>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the \${build} and \${dist} directory trees -->
    <delete dir="\${build}"/>
    <delete dir="\${dist}"/>
  </target>
</project>

__EOD__


fi
