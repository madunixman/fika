#! /usr/bin/env bash
# Usage: fika project:servlet <project-name> 
# Summary: creates a new web project <project-name> in the current directory
# Help: This command is useful to create usual maven boilerplate for dead-simple projects


if [ $# -ne 1 ]; then
	echo "Bad param numbers: see manual"
	exit;
else
	PROJECTNAME=$1
	lowProject=$(echo "$PROJECTNAME" | tr '[:upper:]' '[:lower:]')
	if [ "$MVN_GROUPID" = "" ]; then
		echo -ne "Group Id: "; read mvn_groupid
	else
		mvn_groupid=${MVN_GROUPID}
	fi 
	
	echo -ne "Description: "; read mvn_description
	mkdir -p ${PROJECTNAME}/src/main/java
	mkdir -p ${PROJECTNAME}/src/main/resources
	mkdir -p ${PROJECTNAME}/src/main/webapp
	mkdir -p ${PROJECTNAME}/src/main/webapp/WEB-INF
	mkdir -p ${PROJECTNAME}/src/test/java
	mkdir -p ${PROJECTNAME}/src/test/resources
 	cat<<__EOD__>${PROJECTNAME}/src/main/webapp/index.html
<html>
<head><title>${PROJECTNAME}</title></head>
<body><h1>${PROJECTNAME}</h1>

</body>
</html>
__EOD__
cat<<__EOD__>${PROJECTNAME}/src/main/java/${PROJECTNAME^}.java
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.core.Response;

@Path("/users")
public class ${PROJECTNAME^} { //Rename me as you wish

	@GET
	public Response getUser() {

		return Response.status(200).entity("getUser is called").build();

	}

	@GET
	@Path("/vip")
	public Response getUserVIP() {

		return Response.status(200).entity("getUserVIP is called").build();

	}

	@GET
	@Path("{name}")
	public Response getUserByName(@PathParam("name") String name) {

		return Response.status(200)
				.entity("getUserByName is called, name : " + name).build();

	}

	@GET
	@Path("{id : \\\\d+}")
	public Response getUserById(@PathParam("id") String id) {

		return Response.status(200).entity("getUserById is called, id : " + id)
				.build();

	}

	@GET
	@Path("/username/{username : [a-zA-Z][a-zA-Z_0-9]}")
	public Response getUserByUserName(@PathParam("username") String username) {

		return Response.status(200)
				.entity("getUserByUserName is called, username : " + username)
				.build();

	}

	@GET
	@Path("/books/{isbn : \\\\d+}")
	public Response getUserBookByISBN(@PathParam("isbn") String isbn) {

		return Response.status(200)
				.entity("getUserBookByISBN is called, isbn : " + isbn).build();

	}

}


__EOD__
 	cat<<__EOD__>${PROJECTNAME}/src/main/webapp/WEB-INF/web.xml
<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>${PROJECTNAME}</display-name>
	<context-param>
		<param-name>resteasy.scan</param-name>
		<param-value>true</param-value>
	</context-param>

	<listener>
		<listener-class>
			org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap</listener-class>
	</listener>
	<servlet>
		<servlet-name>resteasy-servlet</servlet-name>
		<servlet-class>
			org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>resteasy-servlet</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>

</web-app>
__EOD__
 	cat<<__EOD__>${PROJECTNAME}/pom.xml
<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>${mvn_groupid}.${lowProject}</groupId>
  <artifactId>${PROJECTNAME}</artifactId>
  <packaging>war</packaging>
  <version>0.0.1</version>
  <description>${mvn_description}</description>
  <!-- homepage for the project  ${PROJECTNAME}-->
  <!-- EG: <url>http://dev.lulli.net/projects/${PROJECTNAME}</url>-->
<!-- for distribution of artifact into the repo -->
<!-- ****************************************** -->
<build>
 <extensions>
    <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>2.8</version>
    </extension>
 </extensions>
<!--  For ReastEasy build -->
		<finalName>${PROJECTNAME}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
				<!--
					<source>1.6</source>
					<target>1.6</target>
				-->
				</configuration>
			</plugin>
		</plugins>
<!--  For ReastEasy build -->

</build>
<!-- 
 Kindly include the following params into your settings.xml
 if you want to upload to your own repo 
-->
<distributionManagement>
    <repository>
      <id>\${repository.id}</id>
      <name>\${repository.name}</name>
      <url>\${repository.url}</url>
    </repository>
    <site>
      <id>\${repository.id}</id>
      <name>\${repository.name}</name>
      <url>\${repository.site.url}</url>
    </site>
</distributionManagement>
<!-- ****************************************** -->

<dependencies>
  <dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>1.2.17</version>
  </dependency>
<dependency>
	<groupId>org.jboss.resteasy</groupId>
	<artifactId>resteasy-jaxrs</artifactId>
	<version>2.2.1.GA</version>
</dependency>

</dependencies>


</project>
__EOD__


fi
